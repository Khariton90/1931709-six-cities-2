openapi: 3.1.0
info:
  title: API сервер для проекта «Шесть городов»
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов»
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0

tags:
- name: users
  description: Действия с пользователем
- name: offers
  description: Действия с объявлениями
- name: comments
  description: Действия с комментариями

paths:
  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрация нового пользователя

      requestBody:
        description: Создание нового пользователя
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован Объект пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "409":
          description: Пользователь с таким email уже существует

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизация пользователя на основе логина и пароля

      requestBody:
        description: Информация для авторизации пользователя
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginUser'
        required: true

      responses:
        "200":
          description: Пользователь авторизован

        "401":
          description: Пользователь не авторизован

    get:
      tags:
        - users
      summary: Проверка авторизации пользователя
      description: Проверка авторизации

      requestBody:
        description: Информация для авторизации
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginUser'
        required: true

      responses:
        "200":
          description: Пользователь успешно авторизован

        "401":
          description: Пользователь не авторизован

  /offers:
    get:
      tags:
        - offers
      summary: Получить предложения по аренде
      description: Возвращает 60 предложений по аренде.

      responses:
        "200":
          description: Список доступных предложений по аренде

  /offers/{offerId}:
    get:
      tags:
        - offers
      summary: Возвращает предложение с идентификатором offerId.
      description: Предложение с идентификатором offerId.

      responses:
        "200":
          description: OBJECT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

  /offers/create:
    post:
      tags:
        - offers
      summary: Новое предложение по аренде
      description: Создаст предложение по аренде
  
      requestBody:
          description: Информация для создания предложения по аренде
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
          required: true
  
      responses:
          "201":
            description: Предложение по аренде создано Объект предложения
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/offer'
  
          "401":
            description: Пользователь не авторизован

  /offers/{offerId}/delete:
    delete:
      tags:
        - offers
      summary: Удаление предложения по аренде
      description: Удаляет предложение по аренде

      responses:
        "204":
          description: Предложение по аренде удалено

        "401":
          description: Пользователь не авторизован

  /offers/{offerId}/update:
    patch:
      tags:
        - offers
      summary: Редактирование предложения по аренде
      description: Редактирует предложение по аренде

      requestBody:
        description: Информация для редактирования предложения по аренде
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offer'
        required: true

      responses:
        "200":
          description: Предложение по аренде отредактировано Отредактированный объект предложения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'

        "403":
          description: Доступ запрещён

        "401":
          description: Пользователь не авторизован

  /comments/{offerId}:
    post:
      tags:
        - comments
      summary: Создать новый комментарий
      description: Создаст новый комментарий
  
      requestBody:
          description: Информация по новому комментарию
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commentsReq'
          required: true
  
      responses:
          "201":
            description: Комментарий создан Объект комментария
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/commentsReq'
  
          "401":
            description: Пользователь не авторизован

    get:
      tags:
        - comments
      summary: Получить список комментариев
      description: Получает список комментариев
  
      responses:
        "200":
          description: Получен список комментариев
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/commentRes'

components:
  schemas:
    createUser:
      type: object

      properties:
        name:
          type: string
          example: Angelina

        email:
          type: string
          example: example@example.com

        avatarUrl:
          type: string
          example: ./img/example.jpg

        password:
          type: string
          example: 123456

        isPro:
          type: string
          example: true

    user:
      type: object

      properties:
        id:
          type: string
          example: 634017ba711b20efa888a055

        email:
          type: string
          example: example@example.com

    loginUser:
      type: object

      properties:
        email:
          type: string
          example: example@example.com

        password:
          type: string
          example: 123456

    offer:
      type: object

      properties:
        title:
          type: string
          example: Nice

        description:
          type: string
          example: houseRelax.

        postDate:
          type: string
          example: '2022-09-08T14:30:30.182Z'

        city:
          type: object
          example: {
            "name": "Paris",
            "location": {
              "latitude": 48.85661,
              "longitude": 2.351499
            }
          }

        previewImage:
          type: string
          example: "https://10.react.pages.academy/static/hotel/19.jpg"

        images:
          type: object
          example: [
            "https://10.react.pages.academy/static/hotel/3.jpg",
            "https://10.react.pages.academy/static/hotel/2.jpg",
            "https://10.react.pages.academy/static/hotel/15.jpg",
            "https://10.react.pages.academy/static/hotel/20.jpg",
            "https://10.react.pages.academy/static/hotel/9.jpg",
            "https://10.react.pages.academy/static/hotel/10.jpg"
          ]

        isPremium:
          type: boolean
          example: true

        isFavorite:
          type: boolean
          example: false

        rating:
          type: number
          example: 5

        type:
          type: string
          example: "apartment"

        rooms:
          type: number
          example: 3
        
        guests: 
          type: number
          example: 5

        price:
          type: number
          example: 100

        amenityes:
          type: array
          example: [
            'Breakfast',
            'Air',
            'conditioning',
            'Laptop',
            'friendly',
            'Washer'
            ]

        comments:
          type: number
          example: 5

        location:
          type: object
          example: {
            "latitude": 48.843610000000005,
            "longitude": 2.338499
            }

        userId:
          type: string
          example: 634e92ea7dd68f8986a447bf

    commentsReq:
      type: object
      
      properties:
        commentRating: 
          type: number
          example: 3

        commentText:
          type: string
          example: lorem ipsum

        hostId:
          type: string
          example: 634e92ea7dd68f8986a447bf

    commentsRes:
      type: object
      
      properties:
        commentText:
          type: string
          example: lorem ipsum

        createdAt:
          type: string
          example: '2022-09-08T14:30:30.182Z'

        commentRating: 
          type: number
          example: 3

        hostId:
          type: string
          example: 634017ba711b20efa888a055

        
